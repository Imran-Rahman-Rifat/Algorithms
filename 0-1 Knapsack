#include<bits/stdc++.h>
using namespace std;
vector<pair<pair<int,int>,int>>vec;
int K[1000][1000];
int knapSack(int n,int w)
{
    for(int i=0;i<=n;i++){
        for(int j=0;j<=w;j++){
            if(i==0 || j==0)
                K[i][j] =0;
            else if(vec[i-1].first.first<=j)
                K[i][j]=max(vec[i-1].first.second + K[i-1][j-vec[i-1].first.first],K[i-1][j]);
            else
                K[i][j] = K[i-1][j];
        }
    }
    return K[n][w];
}
void print_knapsack(int w,int res,int n)
{
    for(int i=n;i>0 && res>0 ;i--){
        if(res==K[i-1][w]) continue;
        else{
            //cout<<vec[i-1].first.first<<" ";
            cout<<vec[i-1].second<<" ";
            res=res-vec[i-1].first.second;
            w=w-vec[i-1].first.first;
        }
    }
}

int main()
{
    int n,w;
    cin>>n>>w;
    vector<int> wt(n),ben(n);
    for(int i=0;i<n;i++) cin>>wt[i];
    for(int i=0;i<n;i++) cin>>ben[i];
    for(int i=0;i<n;i++)
        vec.push_back(make_pair(make_pair(wt[i],ben[i]),i+1));
    sort(vec.begin(),vec.end());
    int res=knapSack(n,w);
    cout<<res<<endl;
    print_knapsack(w,res,n);
    cout<<endl;
    //for(auto [x,y]:vec)
        //cout<<y<<" "<<x.first<<" "<<x.second<<endl;
}
