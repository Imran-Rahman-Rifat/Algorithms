#include<bits/stdc++.h>
using namespace std;
stack<int> s;
int dis[9999];
int path[9999];
void print_graph(vector<pair<int,int>> graph[],int v)
{
    for(int i=0;i<v;i++){
        cout<<i<<"->";
        for(auto it=graph[i].begin();it!=graph[i].end();it++){
            cout<<it->first<<" "<<it->second<<" ";
        }
        cout<<endl;
    }
}
void DFS(vector<pair<int,int>> graph[],int root,bool visited[])
{
    visited[root]=true;
    for(auto it=graph[root].begin();it!=graph[root].end();it++){
        if(!visited[it->first])
            DFS(graph,it->first,visited);
    }
    s.push(root);
}
void topologicalSort(vector<pair<int,int>> graph[],int v,int root)
{
    bool visited[v];
    for(int i=0;i<v;i++){
        dis[i]=INT_MAX;
    }
    dis[root]=0;

    for(int i=0;i<v;i++){
            visited[i]=false;
    }
    for(int i=0;i<v;i++){
        if(!visited[i])
            DFS(graph,i,visited);
    }
    while(!s.empty()){
        int x=s.top();
        s.pop();
        if(dis[x]!=INT_MAX){
            for(auto it=graph[x].begin();it!=graph[x].end();it++){
                if(dis[it->first]>dis[x]+it->second){
                    dis[it->first]=dis[x]+it->second;
                    path[it->first]=x;
                }
        }

        }

    }
    for(int i=0;i<v;i++) {
        if(dis[i]==INT_MAX) cout<<"INF ";
        else cout<<dis[i]<<" ";
    }
    cout<<endl;

}
void print_path(int source,int des)
{
    if(source==des) cout<<source<<" ";
    else if(dis[des]==INT_MAX){
        cout<<"No path exit";
    }
    else{
        print_path(source,path[des]);
        cout<<des<<" ";

    }

}
int main()
{
    int v,e;
    cin>>v>>e;
    vector<pair<int,int>> graph[v];
    for(int i=0;i<e;i++){
        int x,y,cost;
        cin>>x>>y>>cost;
        graph[x].push_back(make_pair(y,cost));

    }
    bool visited[v];
    for(int i=0;i<v;i++){
            visited[i]=false;
    }
    //DFS(graph,0,visited);
    //print_graph(graph,v);
    int source=0;
    topologicalSort(graph,v,source);
    for(int i=0;i<v;i++){
        cout<<"Path from "<<source<<" to "<<i<<" is = ";
        print_path(source,i);
        cout<<endl;
    }
}
/*
7 6
0 1 5
0 2 6
1 3 9
1 5 7
2 6 13
2 4 10
*/
